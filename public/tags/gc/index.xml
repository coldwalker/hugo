<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GC on 凛冬夜行</title>
    <link>https://coldwalker.github.io/tags/gc/</link>
    <description>Recent content in GC on 凛冬夜行</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Wed, 27 Feb 2019 11:00:00 +0800</lastBuildDate>
    <atom:link href="https://coldwalker.github.io/tags/gc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java垃圾回收浅析(4)-GC常见问题分析</title>
      <link>https://coldwalker.github.io/2019/02/gc_problem_resolve/</link>
      <pubDate>Wed, 27 Feb 2019 11:00:00 +0800</pubDate>
      <guid>https://coldwalker.github.io/2019/02/gc_problem_resolve/</guid>
      <description>常见的几种GC问题 回顾一下：上面几篇先讲到了java对象内存分配过程、然后总结了几种GC方式和常见的GC算法原理，也基本了解了GC日志怎么看</description>
    </item>
    <item>
      <title>Java垃圾回收浅析(3)-GC日志分析</title>
      <link>https://coldwalker.github.io/2019/02/gc_log_analyze/</link>
      <pubDate>Mon, 25 Feb 2019 16:00:00 +0800</pubDate>
      <guid>https://coldwalker.github.io/2019/02/gc_log_analyze/</guid>
      <description>控制GC日志打印的常用配置项 -XX:+PrintGCDetails 启用详细GC日志模式。和-XX:+PrintGC的普通日志模式相比，详细日志模式会把：使用的垃圾回收器、整个堆</description>
    </item>
    <item>
      <title>Java垃圾回收浅析(2)-GC方式介绍</title>
      <link>https://coldwalker.github.io/2019/02/gc_intro/</link>
      <pubDate>Tue, 19 Feb 2019 17:00:00 +0800</pubDate>
      <guid>https://coldwalker.github.io/2019/02/gc_intro/</guid>
      <description>为什么需要GC？ 当程序创建对象、数组等引用类型实体时，系统都会在堆内存中为之分配一块内存区，对象就保存在这块内存区中，当这块内存不再被任何引</description>
    </item>
    <item>
      <title>Java垃圾回收浅析(1)-对象内存申请</title>
      <link>https://coldwalker.github.io/2019/02/gc_object_alloc_process/</link>
      <pubDate>Thu, 14 Feb 2019 15:40:00 +0800</pubDate>
      <guid>https://coldwalker.github.io/2019/02/gc_object_alloc_process/</guid>
      <description>Java虚拟机内存管理 和C/C++语言不同，Java通过虚拟机来对内存进行自动管理，避免了手动申请和释放内存的繁琐以及容易出错的问题，Jav</description>
    </item>
  </channel>
</rss>
